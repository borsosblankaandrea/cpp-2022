#include <iostream>
#include <vector>
#include <cstdlib>
#include <algorithm>
#include <random>
#include <iomanip>

#include "Point.h"
#include "PointsSet.h"
#define MAX 1000
using namespace std;

int main() {
//    int x[100];
//    int n = 10;
//    cout<<"x = [ ";
//    for( int i=0; i<n; ++i ){
//        x[i] = rand() % MAX;
//        cout<<x[i]<<" ";
//    }
//    cout << "]" <<endl;
//    cout << "Legkisebb : " << *min_element(x, x+n) << endl;
//    vector<int> v;
//
//    v.reserve(100);
//    cout<<"v = [ ";
//    for( int i=0; i<n; ++i ){
//        v.emplace_back( rand() % MAX );
//        cout<<v[ i]<<" ";
//    }
//    cout << "]" <<endl;
//    cout << "Legnagyobb: " << *max_element(v.begin(),v.end()) << endl;

/// random generalas
//    random_device rd;  //Will be used to obtain a seed for the random number engine
//    mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
//    uniform_int_distribution<> distrib(1, 20);
//
//    for (int n=0; n<10; ++n)
//        //Use `distrib` to transform the random unsigned int generated by gen into an int in [1, 6]
//        cout << distrib(gen) << ' ' << distrib(gen) << endl;
//    cout << '\n';


    int n = 2;
    cout<<"Pontok\tMinTav\t MaxTav\t #tavolsagok\t#kulonbozotavolsagok"<<endl;
    cout<< fixed;
    for( int i= 0; i<12; ++i ){
        PointSet pSet( n );
        cout<<setw(6)<<n<<" ";
        cout<<setw(8)<<setprecision(2)<<pSet.minDistance()<<" ";
        cout<<setw(8)<<setprecision(2)<<pSet.maxDistance()<<" ";
        //cout<<setw(10) << pSet.numDistances()<<" ";
        //cout<<setw(16) << pSet.numDistinctDistances()<<endl;
        n = n << 1;
    }
    return 0;
}